define(["require", "exports", "../Shared/Timed", "./ComfortZones", "../Shared/Point"], function (require, exports, Timed_1, ComfortZones_1, Point_1) {
    "use strict";
    var GraphComfortBase = (function () {
        function GraphComfortBase() {
            this.setupArea();
        }
        GraphComfortBase.prototype.setupArea = function () {
            var zones = [new ComfortZones_1.ComfortZones("stretch", 300), new ComfortZones_1.ComfortZones("comfort", 100)];
            var d3zones = d3.select("g#zones")
                .selectAll("circle")
                .data(zones);
            d3zones.enter().append("circle")
                .attr("cx", 400)
                .attr("cy", 400)
                .attr("r", 0)
                .attr("class", "area")
                .attr("id", function (d) {
                return d.name;
            });
            this.chaos = document.getElementById('chaos');
            this.stretch = document.getElementById('stretch');
            this.comfort = document.getElementById('comfort');
            var centerX = Number(this.comfort.getAttribute('cx'));
            var centerY = Number(this.comfort.getAttribute('cy'));
            this.centerPoint = new Point_1.Point(centerX, centerY);
        };
        GraphComfortBase.prototype.hide = function () {
            console.log("HIDE comfortGRAPH");
            var d3zones = d3.select("g#zones")
                .selectAll("circle")
                .transition()
                .duration(1000)
                .attr("r", 0);
            var d3drops = d3.select("#stage")
                .selectAll("circle.dropper")
                .transition()
                .delay(250)
                .duration(250)
                .attr("r", 0);
            return Timed_1.Timed.for(1000);
        };
        GraphComfortBase.prototype.showBase = function () {
            console.log("SHOW graph");
            var d3zones = d3.select("g#zones")
                .selectAll("circle")
                .attr("r", 0)
                .transition()
                .duration(1000)
                .delay(function (d, i) { return i * 100; })
                .ease("elastic")
                .attr("r", function (d) {
                return d.radius;
            });
            return Timed_1.Timed.for(1000);
        };
        return GraphComfortBase;
    }());
    exports.GraphComfortBase = GraphComfortBase;
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUFNLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztpQkFDekMsSUFBSSxDQUFDLFNBQVMsQ0FBQztpQkFDZixJQUFJLENBQUMsR0FBRyxFQUFFLFVBQVMsQ0FBYztnQkFDOUIsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUM7WUFDcEIsQ0FBQyxDQUFDLENBQUM7WUFFWCxNQUFNLENBQUMsYUFBSyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUUzQixDQUFDO1FBRUwsdUJBQUM7SUFBRCxDQXhFQSxBQXdFQyxJQUFBO0lBeEVZLDRDQUFnQiIsImZpbGUiOiJHcmFwaENvbWZvcnRCYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUaW1lZH0gZnJvbSAnLi4vU2hhcmVkL1RpbWVkJztcbmltcG9ydCB7Q29tZm9ydFpvbmVzfSBmcm9tICcuL0NvbWZvcnRab25lcyc7XG5pbXBvcnQge1BvaW50fSBmcm9tICcuLi9TaGFyZWQvUG9pbnQnO1xuXG5cbmV4cG9ydCBjbGFzcyBHcmFwaENvbWZvcnRCYXNlIHtcbiAgICBjaGFvcyA6IEhUTUxFbGVtZW50O1xuICAgIHN0cmV0Y2ggOiBIVE1MRWxlbWVudDtcbiAgICBjb21mb3J0IDogSFRNTEVsZW1lbnQ7XG4gICAgY2VudGVyUG9pbnQgOiBQb2ludDtcbiAgICBcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5zZXR1cEFyZWEoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNldHVwQXJlYSAoKSB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICAgY29uc3Qgem9uZXMgPSBbbmV3IENvbWZvcnRab25lcyhcInN0cmV0Y2hcIiwzMDApLCBuZXcgQ29tZm9ydFpvbmVzKFwiY29tZm9ydFwiLDEwMCldO1xuICAgICAgICBjb25zdCBkM3pvbmVzID0gZDMuc2VsZWN0KFwiZyN6b25lc1wiKVxuICAgICAgICAgICAgLnNlbGVjdEFsbChcImNpcmNsZVwiKVxuICAgICAgICAgICAgLmRhdGEoem9uZXMpO1xuXG4gICAgICAgIGQzem9uZXMuZW50ZXIoKS5hcHBlbmQoXCJjaXJjbGVcIilcbiAgICAgICAgICAgIC5hdHRyKFwiY3hcIiwgNDAwKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiY3lcIiwgNDAwKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiclwiLCAwKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiY2xhc3NcIiwgXCJhcmVhXCIpXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJpZFwiLCBmdW5jdGlvbihkOkNvbWZvcnRab25lcykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZC5uYW1lO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIFxuXG4gICAgICAgIHRoaXMuY2hhb3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhb3MnKTtcbiAgICAgICAgdGhpcy5zdHJldGNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N0cmV0Y2gnKTtcbiAgICAgICAgdGhpcy5jb21mb3J0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbWZvcnQnKTtcbiAgICAgICAgY29uc3QgY2VudGVyWCA9IE51bWJlcih0aGlzLmNvbWZvcnQuZ2V0QXR0cmlidXRlKCdjeCcpKTtcbiAgICAgICAgY29uc3QgY2VudGVyWSA9IE51bWJlcih0aGlzLmNvbWZvcnQuZ2V0QXR0cmlidXRlKCdjeScpKTtcbiAgICAgICAgdGhpcy5jZW50ZXJQb2ludCA9IG5ldyBQb2ludChjZW50ZXJYLGNlbnRlclkpO1xuICAgICAgICBcblxuICAgIH1cbiAgICBwdWJsaWMgaGlkZSgpOlRoZW5hYmxlPG51bWJlcj4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkhJREUgY29tZm9ydEdSQVBIXCIpO1xuICAgICAgICBcbiAgICAgICAgY29uc3QgZDN6b25lcyA9IGQzLnNlbGVjdChcImcjem9uZXNcIikgICAgXG4gICAgICAgICAgICAuc2VsZWN0QWxsKFwiY2lyY2xlXCIpXG4gICAgICAgICAgICAgICAgLnRyYW5zaXRpb24oKVxuICAgICAgICAgICAgICAgIC5kdXJhdGlvbigxMDAwKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiclwiLCAwKTtcblxuICAgICAgICBjb25zdCBkM2Ryb3BzID0gZDMuc2VsZWN0KFwiI3N0YWdlXCIpXG4gICAgICAgICAgICAuc2VsZWN0QWxsKFwiY2lyY2xlLmRyb3BwZXJcIikgICBcbiAgICAgICAgICAgIC50cmFuc2l0aW9uKClcbiAgICAgICAgICAgICAgICAuZGVsYXkoMjUwKVxuICAgICAgICAgICAgICAgIC5kdXJhdGlvbigyNTApXG4gICAgICAgICAgICAgICAgLmF0dHIoXCJyXCIsIDApO1xuICAgICAgICByZXR1cm4gVGltZWQuZm9yKDEwMDApO1xuICAgICAgICAgICAgICAgIFxuICAgIH1cbiAgICBwdWJsaWMgc2hvd0Jhc2UoKTpUaGVuYWJsZTxudW1iZXI+IHtcbiAgICAgICAgY29uc29sZS5sb2coXCJTSE9XIGdyYXBoXCIpO1xuICAgICAgICBjb25zdCBkM3pvbmVzID0gZDMuc2VsZWN0KFwiZyN6b25lc1wiKVxuICAgICAgICAgICAgLnNlbGVjdEFsbChcImNpcmNsZVwiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiclwiLCAwKVxuICAgICAgICAgICAgLnRyYW5zaXRpb24oKVxuICAgICAgICAgICAgICAgIC5kdXJhdGlvbigxMDAwKVxuICAgICAgICAgICAgICAgIC5kZWxheShmdW5jdGlvbihkLCBpKSB7IHJldHVybiBpICogMTAwOyB9KVxuICAgICAgICAgICAgICAgIC5lYXNlKFwiZWxhc3RpY1wiKVxuICAgICAgICAgICAgICAgIC5hdHRyKFwiclwiLCBmdW5jdGlvbihkOkNvbWZvcnRab25lcykgeyBcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQucmFkaXVzOyBcbiAgICAgICAgICAgICAgICB9KTsgXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gVGltZWQuZm9yKDEwMDApO1xuICAgICAgICBcbiAgICB9XG5cbn0iXX0=
