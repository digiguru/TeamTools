{"version":3,"sources":["Mediator.ts"],"names":[],"mappings":";;IAQA;QAQI;YACI,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,IAAI,CAAC,iBAAiB,GAAG,IAAI,KAAK,EAAqB,CAAC;YACxD,IAAI,CAAC,cAAc,GAAG,IAAI,+BAAc,EAAE,CAAC;YAC3C,IAAI,CAAC,iBAAiB,GAAG,IAAI,qCAAiB,EAAE,CAAC;QACrD,CAAC;QAEM,qBAAE,GAAT,UAAU,OAAc,EAAE,MAAU;YAChC,MAAM,CAAC,CAAC,OAAO,CAAC,CAChB,CAAC;gBACG,KAAK,SAAS;oBACV,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;oBACrB,KAAK,CAAC;gBACV,KAAK,UAAU;oBACX,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACtB,KAAK,CAAC;gBACV,KAAK,qBAAqB;oBACtB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;oBACzB,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC;oBAC/B,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;oBACzB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;oBACrC,KAAK,CAAC;gBACV,KAAK,gBAAgB;oBACjB,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,KAAK,CAAC;gBACV,KAAK,yBAAyB;oBAC1B,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,KAAK,CAAC;gBACV,KAAK,wBAAwB;oBACzB,IAAM,WAAW,GAAQ,MAAM,CAAC;oBAChC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;oBACxC,KAAK,CAAC;YAEd,CAAC;QACL,CAAC;QAEM,0BAAO,GAAd,UAAe,IAAS;YACpB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;QAEM,2BAAQ,GAAf,UAAgB,KAAiB;YAC7B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxC,CAAC;QAEM,iCAAc,GAArB;YACI,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;QAC/B,CAAC;QAEO,wCAAqB,GAA7B,UAA8B,IAAS;YACnC,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,iBAAiB,GAAG,IAAI,qCAAiB,EAAE,CAAC;YACrD,CAAC;YACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtC,CAAC;QAEM,qCAAkB,GAAzB,UAA0B,OAAO;YAC7B,IAAI,SAAS,GAAG;gBACb,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBAC1B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,yCAAmB,EAAE,CAAC;gBACzD,CAAC;gBACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACzB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,EAAE,CAAA,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC/B,CAAC;gBACD,SAAS,EAAE,CAAC;YAChB,CAAC;QAGL,CAAC;QAEO,0CAAuB,GAA/B;YACI,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;gBAC9B,IAAI,CAAC,mBAAmB,GAAG,IAAI,yCAAmB,EAAE,CAAC;YACzD,CAAC;YACD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC1D,CAAC;QAEM,6BAAU,GAAjB,UAAkB,EAAE;YAApB,iBAOC;YANG,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;YACrC,IAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;gBACnD,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;gBAC3B,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;YACrC,CAAC,CAAC,CAAC;QAEP,CAAC;QAEM,4BAAS,GAAhB,UAAiB,IAAW,EAAE,QAAe,EAAE,IAAS;YACpD,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;YAChD,IAAI,CAAC,IAAI,EAAE,CAAC;QAChB,CAAC;QAEO,uCAAoB,GAA5B,UAA6B,IAAW,EAAE,QAAe,EAAE,IAAS;YAChE,IAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAS,CAAC;gBAC3D,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;YACH,EAAE,CAAA,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;gBACvB,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;gBAC9B,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC1C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAM,UAAU,GAAG,IAAI,qCAAiB,CAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,CAAC,CAAC;gBAC7D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC5C,CAAC;QACL,CAAC;QAEO,uBAAI,GAAZ;YACI,4BAA4B;YAC5B,OAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;YACrC,IAAI,SAAS,GAAG;gBAAA,iBAUf;gBATG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,UAAC,MAAM;oBAC3C,EAAE,CAAA,CAAC,MAAM,CAAC,CAAA,CAAC;wBACP,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAI,CAAC,CAAC;wBACnC,KAAI,CAAC,cAAc,EAAE,CAAC;oBAC1B,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,KAAI,CAAC,CAAC;wBACnC,KAAI,CAAC,uBAAuB,EAAE,CAAC;oBACnC,CAAC;gBACL,CAAC,CAAC,CAAA;YACN,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAEb,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAClD,CAAC;QAIL,eAAC;IAAD,CA3IA,AA2IC,IAAA;IA3IY,4BAAQ","file":"Mediator.js","sourcesContent":["import {TuckmanUserChoice} from './TuckmanUserChoice';\nimport {BreadcrumbControl} from '../Shared/BreadcrumbControl';\nimport {User} from '../Shared/User';\nimport {FormUserChoice} from '../Shared/FormUserChoice';\nimport {GraphTuckmanEntry} from './GraphTuckmanEntry';\nimport {GraphTuckmanHistory} from './GraphTuckmanHistory';\n\n\nexport class Mediator {\n\n    userChoiceHistory : Array<TuckmanUserChoice>;\n    formUserChoice : FormUserChoice;\n    graphTuckmanEntry : GraphTuckmanEntry;\n    graphTuckmanHistory: GraphTuckmanHistory;\n    breadcrumbControl: BreadcrumbControl;\n    \n    constructor() {\n        console.log(\"START everything\");\n        this.userChoiceHistory = new Array<TuckmanUserChoice>();\n        this.formUserChoice = new FormUserChoice();\n        this.breadcrumbControl = new BreadcrumbControl();\n    }\n\n    public do(command:string, params:any) {\n        switch (command)\n        {\n            case \"addUser\":\n                this.addUser(params);\n                break;\n            case \"setUsers\":\n                this.setUsers(params);\n                break;\n            case \"saveTuckmanFeedback\":\n                const area = params.area;\n                const distance = params.number;\n                const user = params.user;\n                this.saveGraph(area, distance, user);\n                break;\n            case \"showUserChoice\":\n                this.showUserChoice();\n                break;\n            case \"showGraphTuckmanHistory\":\n                this.showGraphTuckmanHistory();\n                break;\n            case \"showGraphTuckmanChoice\":\n                const comfortuser:User = params;\n                this.showGraphTuckmanEntry(comfortuser);\n                break;\n\n        }\n    }\n    \n    public addUser(user:User) {\n        this.formUserChoice.addUser(user);\n    }\n\n    public setUsers(users:Array<User>) {\n        this.formUserChoice.setUsers(users);\n    }\n\n    public showUserChoice() {\n        this.formUserChoice.show();\n    }\n\n    private showGraphTuckmanEntry(user:User) {\n        if(!this.graphTuckmanEntry) {\n            this.graphTuckmanEntry = new GraphTuckmanEntry();\n        }\n        this.graphTuckmanEntry.show(user);\n    }\n    \n    public showTuckmanHistory(history) {\n        var afterHide = function() {\n           if(!this.graphTuckmanHistory) {\n                this.graphTuckmanEntry = null;\n                this.graphTuckmanHistory = new GraphTuckmanHistory();\n            }\n            this.graphTuckmanHistory.show(history);\n        }.bind(this);\n        if (this.graphTuckmanEntry) {\n            this.graphTuckmanEntry.hide().then(afterHide);\n        } else {\n            if(this.formUserChoice) {\n                this.formUserChoice.hide();\n            }\n            afterHide();\n        }\n        \n       \n    }\n\n    private showGraphTuckmanHistory() {\n        if(!this.graphTuckmanHistory) {\n            this.graphTuckmanEntry = null;\n            this.graphTuckmanHistory = new GraphTuckmanHistory();\n        }\n        this.graphTuckmanHistory.show(this.userChoiceHistory);\n    }\n\n    public selectUser(id) {\n        console.log(\"ACTION selectUser\", id);\n        const user = this.formUserChoice.getUser(id).then((user) => {\n            this.formUserChoice.hide();\n            this.showGraphTuckmanEntry(user);\n        });\n        \n    }\n\n    public saveGraph(area:string, distance:number, user:User) {\n        this.formUserChoice.markUserDone(user);\n        this.addUserChoiceHistory(area, distance, user);\n        this.next();\n    }\n\n    private addUserChoiceHistory(area:string, distance:number, user:User) {\n        const thisUserChoice = this.userChoiceHistory.filter(function(x) {\n            return x.user.id === user.id;\n        });\n        if(thisUserChoice.length) {\n            thisUserChoice[0].area = area;\n            thisUserChoice[0].distance = distance;\n        } else {\n            const userChoice = new TuckmanUserChoice(user,distance,area);\n            this.userChoiceHistory.push(userChoice);\n        }\n    }  \n\n    private next() {\n        //const prom = new Promsie()\n        console.log(\"ACTION nextUser\", this);\n        var afterHide = function() {\n            this.formUserChoice.hasMoreUsers().then((result) => {\n                if(result){\n                    console.log(\"Users left...\", this);\n                    this.showUserChoice();\n                } else {\n                    console.log(\"NO users left\", this);\n                    this.showGraphTuckmanHistory();\n                }\n            })\n        }.bind(this);\n        \n        this.graphTuckmanEntry.hide().then(afterHide);\n    }\n\n    //setupUsers\n    //\n}"]}