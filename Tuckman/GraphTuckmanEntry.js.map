{"version":3,"sources":["GraphTuckmanEntry.ts"],"names":[],"mappings":"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","file":"GraphTuckmanEntry.js","sourcesContent":["import {User} from '../Shared/User';\nimport {GraphTuckmanBase} from './GraphTuckmanBase';\nimport {Point} from '../Shared/Point';\nimport {SVG} from '../Shared/SVG';\n\nexport class GraphTuckmanEntry extends GraphTuckmanBase {\n    clickArea : HTMLElement;\n    currentUser:User;\n    dropper : SVGAElement;\n    \n    constructor() {\n        super();\n        this.clickArea = document.getElementById('clickable');\n        this.setupOverActivity();\n    }\n\n    public setupOverActivity () {\n        const that = this;\n        d3.select(\"#stage\").on(\"mousemove\", this.graphMove());//this.checkArea);\n    }\n\n    private setupClickActivity () {\n        console.log(\"SETUP graph click\");\n        d3.select(\"#stage\").on(\"mouseup\", this.graphUp());\n        d3.select(\"#stage\").on(\"mousedown\", this.graphDown());\n    }\n\n    private graphMove() {\n        /// 'that' is the instance of graph \n        const that : GraphTuckmanEntry = this;\n        return function(d:void, i:number) {\n            // 'this' is the DOM element \n            const coord = Point.fromCoords(d3.mouse(this));\n            const distance = coord.x;\n            const area = GraphTuckmanEntry.calculateDistance(distance);\n            that.highlight(area);\n        }\n    }\n\n    private graphUp() {\n        // 'that' is the instance of graph \n        const that : GraphTuckmanEntry = this;\n        return function(d:void, i :number) {\n            // 'this' is the DOM element \n            const coord = Point.fromCoords(d3.mouse(this));\n            const distance = coord.x;\n            const area = GraphTuckmanEntry.calculateDistance(distance);          \n            that.saveTheInteraction(area, distance);\n        }\n    }\n\n    private graphDown() {\n        // 'that' is the instance of graph \n        const that = this;\n        return function(d:void, i:number) {\n            // 'this' is the DOM element \n            const coord = Point.fromCoords(d3.mouse(this));\n            const el = SVG.circle(8, coord.x, coord.y, \"dropper\");\n            that.addDropper(el);\n        }\n    }\n\n    public highlight (area : string) {\n        //<circle id=\"stretch\" r=\"300\" cx=\"400\" cy=\"400\" />\n        //<circle id=\"comfort\" r=\"100\" cx=\"400\" cy=\"400\" />\n\n    \n        const d3zones = d3.select(\"svg\")\n            .selectAll(\".area\")\n            .transition()\n                .delay(function() {\n                    if(this.getAttribute(\"id\") === area) {\n                        return 0;\n                    }\n                    return 100;\n                })\n                .ease(\"cubic\")\n                .duration(function() {\n                    return 250;\n                })\n                .style(\"fill\", function() {\n                    if(this.getAttribute(\"id\") === area) {\n                        return \"rgb(0, 180, 219)\";\n                    }\n                    return \"#00D7FE\";\n                });\n        \n    }\n    \n\n    public addDropper (el : SVGAElement)  {\n        this.dropper = el;\n        document.getElementById('stage').insertBefore(el, this.clickArea);\n    }\n\n    public static calculateDistance(distance) {\n        if(distance < 200) {\n            return \"forming\";\n        } else if (distance < 400) {\n            return \"storming\";\n        } else if (distance < 600) {\n            return \"norming\";\n        } else {\n            return \"performing\";\n        }\n    }\n\n\n    public removeInteractions () {\n        console.log(\"REMOVE activiteis from GraphTuckmanEntry\");\n        d3.select(\"#stage\").on(\"mouseup\", function() {\n            console.log(\"UNCLICK - Graphup - No longer interactive stage\");\n        });\n        d3.select(\"#stage\").on(\"mousedown\", function() {\n            console.log(\"UNCLICK - Graphdown - No longer interactive stage\");\n        });\n        d3.select(\"#stage\").on(\"mousemove\", function() {\n            console.log(\"UNMove - mousemove - No longer interactive stage\");\n        });\n        \n    }\n    public saveTheInteraction (area:string, distance:number) {\n        console.log(\"saveTheInteraction\");\n        this.removeInteractions();\n\n        //TODO: Put in the line below\n        var event = new CustomEvent('saveGraph', {\n            \"detail\": {\n                \"area\":area,\n                \"distance\":distance,\n                \"currentUser\":this.currentUser\n            }\n        });\n        document.dispatchEvent(event);\n        //mediator.saveGraph();\n    }\n    public show(user:User) {\n        this.currentUser = user;\n        const Thenable = this.showBase();\n        this.setupOverActivity();\n        return Thenable.then(this.setupClickActivity.bind(this));\n    }\n\n}"]}